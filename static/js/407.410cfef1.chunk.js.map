{"version":3,"file":"static/js/407.410cfef1.chunk.js","mappings":"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","sources":["components/versions/UnifiedLLMAgentV2.jsx"],"sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport { RotateCcw, BookOpen, AlertCircle } from 'lucide-react';\nimport { useGameState } from '../../hooks/useGameState';\nimport { useLLMAPIEnhanced } from '../../hooks/useLLMAPIEnhanced';\nimport GameConfiguration from '../shared/GameConfiguration';\nimport ConversationLog from '../shared/ConversationLog';\nimport { TextInput } from '../shared/GameInput';\nimport { AIThinkingIndicator } from '../LoadingSpinner';\nimport { createDefaultAPIConfig } from '../../utils/gameConfig';\nimport { \n  getButtonPrompt, \n  getUnifiedPrompt \n} from '../../utils/promptEngineering';\nimport { compareGuess, validateGameState } from '../../utils/gameLogic';\n\nconst UnifiedLLMAgentV2 = () => {\n  const [apiConfig, setApiConfig] = useState(createDefaultAPIConfig());\n  \n  // 🔧 修复：使用 useRef 防止状态更新竞态\n  const processingRef = useRef(false);\n  \n  const {\n    gameState,\n    conversation,\n    isThinking,\n    gameData,\n    startGame,\n    resetGame,\n    addToConversation,\n    updateGuesserState,\n    incrementGuessCount,\n    endGame,\n    setAIThinking,\n    processGuesserFeedback\n  } = useGameState();\n\n  const api = useLLMAPIEnhanced(apiConfig);\n\n  const handleConfigChange = useCallback((key, value) => {\n    setApiConfig(prev => ({ ...prev, [key]: value }));\n  }, []);\n\n  // Enhanced number extraction function\n  const enhancedExtractSecretNumber = (content) => {\n    if (!content || typeof content !== 'string') {\n      console.log(\"❌ Invalid content for extraction:\", typeof content, content);\n      return null;\n    }\n    \n    console.log(\"🔍 Analyzing API response for number extraction:\");\n    console.log(\"📄 Content preview:\", content.substring(0, 200) + (content.length > 200 ? '...' : ''));\n    \n    // Pattern 1: \"I guess [number]\" or \"My guess is [number]\"\n    let match = content.match(/(?:I guess|my guess is|我猜|猜测?)\\s*(\\d+)/i);\n    if (match) {\n      const num = parseInt(match[1]);\n      if (num >= 1 && num <= 100) {\n        console.log(\"✅ Pattern 1 match (guess statement):\", num);\n        return num;\n      }\n    }\n    \n    // Pattern 2: \"guess [number]\" or \"guessing [number]\"\n    match = content.match(/(?:guess|guessing)\\s*(\\d+)/i);\n    if (match) {\n      const num = parseInt(match[1]);\n      if (num >= 1 && num <= 100) {\n        console.log(\"✅ Pattern 2 match (guess verb):\", num);\n        return num;\n      }\n    }\n    \n    // Pattern 3: Range format [xx, yy]. xxx or [xx, yy], xxx\n    match = content.match(/\\[(\\d+)[,\\s]+(\\d+)\\][.,\\s]*(\\d+)/);\n    if (match) {\n      const num = parseInt(match[3]);\n      if (num >= 1 && num <= 100) {\n        console.log(\"✅ Pattern 3 match (after range):\", num);\n        return num;\n      }\n    }\n    \n    // Pattern 4: \"next guess\" related\n    match = content.match(/(?:next guess|下一个?猜测?)[\\s:-]*(\\d+)/i);\n    if (match) {\n      const num = parseInt(match[1]);\n      if (num >= 1 && num <= 100) {\n        console.log(\"✅ Pattern 4 match (next guess):\", num);\n        return num;\n      }\n    }\n    \n    // Pattern 5: Number at end of sentence\n    match = content.match(/(\\d+)[.!]*\\s*$/);\n    if (match) {\n      const num = parseInt(match[1]);\n      if (num >= 1 && num <= 100) {\n        console.log(\"✅ Pattern 5 match (end of sentence):\", num);\n        return num;\n      }\n    }\n    \n    // Pattern 6: All 1-100 numbers, take the last one\n    const numbers = content.match(/\\b(\\d{1,2})\\b/g);\n    if (numbers) {\n      console.log(\"🔍 All numbers found:\", numbers);\n      // Find the last valid number in 1-100 range\n      for (let i = numbers.length - 1; i >= 0; i--) {\n        const num = parseInt(numbers[i]);\n        if (num >= 1 && num <= 100) {\n          console.log(\"✅ Pattern 6 match (last valid number):\", num);\n          return num;\n        }\n      }\n    }\n    \n    console.log(\"❌ No valid number extracted from API response\");\n    return null;\n  };\n\n  // Hider response generation with full API support\n  const generateHiderResponse = async (userMessage, gameData) => {\n    if (!apiConfig.useRealAPI) {\n      // Simulation mode\n      await new Promise(resolve => setTimeout(resolve, 500 + Math.random() * 500));\n      \n      const guessMatch = userMessage.match(/(\\d+)/);\n      if (guessMatch) {\n        const guess = parseInt(guessMatch[1]);\n        const secret = gameData.secretNumber;\n        const result = compareGuess(guess, secret);\n        \n        switch (result) {\n          case 'correct':\n            return 'Correct! Congratulations, you got it!';\n          case 'higher':\n            return 'Higher!';\n          case 'lower':\n            return 'Lower!';\n          default:\n            return 'Please guess a number between 1 and 100.';\n        }\n      }\n      return 'Please guess a number between 1 and 100.';\n    } else {\n      // Real API mode\n      try {\n        const guessMatch = userMessage.match(/(\\d+)/);\n        if (guessMatch) {\n          const userGuess = parseInt(guessMatch[1]);\n          const secretNumber = gameData.secretNumber;\n          \n          console.log(`🎯 V2 Hider API Context - Secret: ${secretNumber}, User Guess: ${userGuess}`);\n          \n          const systemPrompt = getUnifiedPrompt('hider');\n          const contextMessage = `You are the HIDER in a number guessing game. \n\nCRITICAL GAME STATE:\n- Your secret number is: ${secretNumber}\n- User just guessed: ${userGuess}\n\nRULES - You MUST respond with EXACTLY one of these:\n- If ${userGuess} < ${secretNumber}: Respond \"Higher!\"\n- If ${userGuess} > ${secretNumber}: Respond \"Lower!\" \n- If ${userGuess} = ${secretNumber}: Respond \"Correct! Congratulations, you got it!\"\n\nCurrent comparison:\n- User guess ${userGuess} compared to secret ${secretNumber}\n- Mathematical result: ${userGuess < secretNumber ? `${userGuess} < ${secretNumber}, so respond \"Higher!\"` : userGuess > secretNumber ? `${userGuess} > ${secretNumber}, so respond \"Lower!\"` : `${userGuess} = ${secretNumber}, so respond \"Correct!\"`}\n\nRespond with ONLY the appropriate feedback, nothing else.`;\n\n          const messages = [{ role: 'user', content: contextMessage }];\n          const result = await api.callRealLLMAPI(messages, systemPrompt);\n          \n          return result.content || \"I couldn't generate a response. Please try again.\";\n        } else {\n          const systemPrompt = getUnifiedPrompt('hider');\n          const contextMessage = `You are the HIDER. Your secret number is ${gameData.secretNumber}. The user hasn't made a numeric guess yet. Encourage them to start guessing a number between 1-100.`;\n          \n          const messages = [{ role: 'user', content: contextMessage }];\n          const result = await api.callRealLLMAPI(messages, systemPrompt);\n          \n          return result.content || \"Please guess a number between 1 and 100.\";\n        }\n      } catch (error) {\n        console.error('V2 Hider API error:', error);\n        return 'Sorry, I encountered an API error. Please try again.';\n      }\n    }\n  };\n\n  // Guesser response generation with full API support\n  const generateGuesserResponse = async (buttonFeedback, gameData) => {\n    if (!apiConfig.useRealAPI) {\n      // Simulation mode - use processGuesserFeedback hook\n      const result = processGuesserFeedback(gameData, buttonFeedback);\n      \n      if (result.error) {\n        return { error: true, response: result.response };\n      }\n      \n      if (result.shouldEndGame) {\n        return { shouldEndGame: true, response: 'Awesome! I guessed it right! Game over.' };\n      }\n      \n      if (result.newRange && result.nextGuess) {\n        return {\n          newRange: result.newRange,\n          nextGuess: result.nextGuess,\n          response: `Got it, need to go ${buttonFeedback.toLowerCase()}. My current range is [${result.newRange.min}, ${result.newRange.max}]. I guess ${result.nextGuess}.`\n        };\n      }\n      \n      return { error: true, response: 'Something went wrong with my calculation. Please restart the game.' };\n    } else {\n      // Real API mode\n      try {\n        const { currentRange, lastGuess } = gameData.guesserState;\n        \n        const systemPrompt = getButtonPrompt('guesser');\n        const contextMessage = `I am the GUESSER in this game using binary search strategy.\n\nCurrent situation:\n- My search range: [${currentRange.min}, ${currentRange.max}]\n- My last guess: ${lastGuess || 'None yet'}\n- User clicked button: \"${buttonFeedback}\"\n\nButton meanings:\n- \"Higher\" means: The secret number is HIGHER than my last guess\n- \"Lower\" means: The secret number is LOWER than my last guess  \n- \"Correct\" means: My last guess was exactly right\n\nI must:\n1. Update my search range based on the button feedback\n2. Calculate my next guess using binary search (middle of new range)\n3. Respond in format: \"Got it, need to go [direction]. My current range is [min, max]. I guess [number].\"\n\nProcess the \"${buttonFeedback}\" button click and give me your next guess.`;\n\n        const messages = [{ role: 'user', content: contextMessage }];\n        const result = await api.callRealLLMAPI(messages, systemPrompt);\n        \n        console.log('🔍 Full API Result Object:', {\n          success: result.success,\n          content: result.content,\n          contentLength: result.content?.length,\n          contentType: typeof result.content,\n          metadata: result.metadata\n        });\n        \n        if (!result.content) {\n          return { error: true, response: \"I couldn't generate a response. Please try again.\" };\n        }\n\n        // Extract next guess from API response\n        const extractedNumber = enhancedExtractSecretNumber(result.content);\n        \n        if (extractedNumber && buttonFeedback !== 'Correct') {\n          // Use local logic to calculate correct range, but use API's guess\n          const localResult = processGuesserFeedback(gameData, buttonFeedback);\n          \n          if (localResult.error) {\n            return { error: true, response: localResult.response };\n          }\n          \n          return {\n            newRange: localResult.newRange,\n            nextGuess: extractedNumber,\n            response: result.content\n          };\n        } else if (buttonFeedback === 'Correct') {\n          return { shouldEndGame: true, response: result.content };\n        } else {\n          // If can't extract number, fallback to local logic\n          console.warn('⚠️  Could not extract number from API response, using local logic as fallback');\n          console.log('📄 Full API Response was:', JSON.stringify(result, null, 2));\n          \n          // Use local logic directly, avoid infinite recursion\n          const localResult = processGuesserFeedback(gameData, buttonFeedback);\n          \n          if (localResult.error) {\n            return { error: true, response: localResult.response };\n          }\n          \n          if (localResult.shouldEndGame) {\n            return { shouldEndGame: true, response: 'Awesome! I guessed it right! Game over.' };\n          }\n          \n          if (localResult.newRange && localResult.nextGuess) {\n            return {\n              newRange: localResult.newRange,\n              nextGuess: localResult.nextGuess,\n              response: `Got it, need to go ${buttonFeedback.toLowerCase()}. My current range is [${localResult.newRange.min}, ${localResult.newRange.max}]. I guess ${localResult.nextGuess}. (Using local fallback logic)`\n            };\n          }\n          \n          return { error: true, response: 'Something went wrong with the calculation. Please restart the game.' };\n        }\n        \n      } catch (error) {\n        console.error('V2 Guesser API error:', error);\n        return { error: true, response: 'Sorry, I encountered an API error. Please try again.' };\n      }\n    }\n  };\n\n  const handleTextInput = async (userMessage) => {\n    if (processingRef.current || isThinking || gameState === 'finished' || api.isProcessing || gameData.currentRole !== 'hider') return;\n    \n    processingRef.current = true;\n    console.log('👤 User guess input:', userMessage);\n    addToConversation('user', userMessage);\n    setAIThinking(true);\n    \n    try {\n      const response = await generateHiderResponse(userMessage, gameData);\n      \n      setAIThinking(false);\n      console.log('🤖 AI response:', response);\n      addToConversation('ai', response);\n      \n      if (response.includes('Correct! Congratulations')) {\n        setTimeout(() => {\n          if (!processingRef.current) return; // 防止重复触发\n          endGame();\n        }, 1000);\n      }\n      \n      if (userMessage.match(/(\\d+)/)) {\n        incrementGuessCount();\n      }\n      \n    } catch (error) {\n      console.error('❌ AI response failed:', error);\n      setAIThinking(false);\n      addToConversation('ai', 'Sorry, I encountered some issues. Please restart the game.');\n    } finally {\n      processingRef.current = false;\n    }\n  };\n\n  const handleButtonInput = async (buttonFeedback) => {\n    console.log('🎮 Button clicked:', buttonFeedback);\n    console.log('Current gameData before processing:', gameData);\n    \n    if (gameState !== 'playing') {\n      console.error('❌ Game is not in playing state');\n      return;\n    }\n    \n    if (processingRef.current || isThinking || gameState === 'finished' || api.isProcessing) {\n      console.log('❌ Button click blocked due to state');\n      return;\n    } \n    \n    processingRef.current = true;\n    console.log('✅ Processing button feedback:', buttonFeedback);\n    addToConversation('user', buttonFeedback);\n    setAIThinking(true);\n    \n    try {\n      const result = await generateGuesserResponse(buttonFeedback, gameData);\n      console.log('V2 generateGuesserResponse result:', result);\n      \n      if (result.error) {\n        setAIThinking(false);\n        addToConversation('ai', result.response);\n        return;\n      }\n\n      if (result.shouldEndGame) {\n        setAIThinking(false);\n        addToConversation('ai', result.response);\n        setTimeout(() => {\n          if (!processingRef.current) return; // 防止重复触发\n          endGame();\n        }, 1000);\n        return;\n      }\n\n      if (result.newRange && result.nextGuess) {\n        console.log('V2 Updating guesser state with:', result.newRange, result.nextGuess);\n        \n        updateGuesserState(result.newRange, result.nextGuess);\n        \n        setAIThinking(false);\n        console.log('🤖 V2 AI response:', result.response);\n        addToConversation('ai', result.response);\n        \n        incrementGuessCount();\n      } else {\n        setAIThinking(false);\n        console.log('🤖 V2 AI response (fallback):', result.response);\n        addToConversation('ai', result.response);\n        incrementGuessCount();\n      }\n      \n    } catch (error) {\n      console.error('❌ Button feedback failed:', error);\n      setAIThinking(false);\n      addToConversation('ai', 'Sorry, I encountered some issues. Please restart the game.');\n    } finally {\n      processingRef.current = false;\n    }\n  };\n\n  // 🔧 修复：清理函数，防止内存泄漏\n  React.useEffect(() => {\n    return () => {\n      processingRef.current = false;\n    };\n  }, []);\n\n  // 🔧 修复：游戏状态验证  \n  React.useEffect(() => {\n    if (gameData.currentRole === 'guesser' && gameState === 'playing') {\n      try {\n        const validation = validateGameState(gameData);\n        if (!validation.isValid) {\n          console.warn('Game state validation failed:', validation.errors);\n        }\n      } catch (error) {\n        console.warn('Game state validation error:', error);\n      }\n    }\n  }, [gameData, gameState]);\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6 bg-gradient-to-br from-green-50 via-emerald-50 to-teal-50 min-h-screen\">\n      <div className=\"bg-white rounded-3xl shadow-2xl p-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-5xl font-bold bg-gradient-to-r from-green-600 via-emerald-600 to-teal-600 bg-clip-text text-transparent mb-4\">\n            🧠 Unified AI Agent System V2\n          </h1>\n          <div className=\"text-lg text-gray-600 leading-relaxed max-w-4xl mx-auto mb-6\">\n            An advanced AI agent system that combines intelligent number guessing gameplay with real API integration. \n            Features robust error handling, button-based feedback for 100% accuracy, hybrid intelligence with local validation, \n            and comprehensive state management to deliver a seamless interactive experience.\n          </div>\n          \n          <div className=\"flex justify-center gap-4\">\n            <button\n              onClick={() => {\n                processingRef.current = false; // 重置处理状态\n                resetGame();\n              }}\n              disabled={isThinking || api.isProcessing}\n              className=\"flex items-center gap-2 px-6 py-3 bg-gray-500 text-white rounded-xl font-semibold hover:bg-gray-600 transition-all disabled:opacity-50\"\n            >\n              <RotateCcw className=\"w-5 h-5\" />\n              Reset Game\n            </button>\n          </div>\n        </div>\n\n        <GameConfiguration \n          config={apiConfig}\n          onConfigChange={handleConfigChange}\n          apiStatus={api.getAPIStatus()}\n          showAdvancedSettings={true}\n          variant=\"v2\"\n          gameData={{\n            ...gameData,\n            useRealAPI: apiConfig.useRealAPI\n          }}\n          conversation={conversation}\n          gameState={gameState}\n        />\n\n        {gameState === 'idle' && (\n          <div className=\"mb-8 p-6 bg-gradient-to-r from-emerald-50 to-teal-50 rounded-2xl border border-emerald-200\">\n            <h3 className=\"text-2xl font-semibold mb-4 text-gray-800 text-center flex items-center justify-center gap-2\">\n              <BookOpen className=\"w-7 h-7 text-emerald-600\" />\n              Choose Game Mode\n            </h3>\n            <p className=\"text-center text-gray-600 mb-6\">Select your preferred interaction method with full API support!</p>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div\n                className=\"p-6 bg-white rounded-xl shadow-lg hover:shadow-xl transition-all cursor-pointer border-2 border-transparent hover:border-emerald-300 group\"\n                onClick={() => {\n                  processingRef.current = false;\n                  startGame('hider');\n                }}\n              >\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-emerald-100 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:bg-emerald-200 transition-all\">\n                    <span className=\"text-2xl\">🎯</span>\n                  </div>\n                  <h4 className=\"text-xl font-semibold text-gray-800 mb-3\">AI Hides Number</h4>\n                  <p className=\"text-gray-600 text-sm mb-4\">AI will think of a number between 1-100, and you guess it with text input</p>\n                  <div className=\"bg-emerald-50 rounded-lg p-3\">\n                    <p className=\"text-xs text-emerald-700\">\n                      {apiConfig.useRealAPI ? `Real ${apiConfig.model} responses` : 'Enhanced simulation'} with instant feedback\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div\n                className=\"p-6 bg-white rounded-xl shadow-lg hover:shadow-xl transition-all cursor-pointer border-2 border-transparent hover:border-teal-300 group\"\n                onClick={() => {\n                  processingRef.current = false;\n                  startGame('guesser');\n                }}\n              >\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-teal-100 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:bg-teal-200 transition-all\">\n                    <span className=\"text-2xl\">🔍</span>\n                  </div>\n                  <h4 className=\"text-xl font-semibold text-gray-800 mb-3\">AI Guesses Number</h4>\n                  <p className=\"text-gray-600 text-sm mb-4\">You think of a number, give feedback using simple buttons</p>\n                  <div className=\"bg-teal-50 rounded-lg p-3\">\n                    <p className=\"text-xs text-teal-700\">\n                      100% accurate with Higher/Lower/Correct buttons - {apiConfig.useRealAPI ? `Real ${apiConfig.model}` : 'Smart simulation'}!\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {(isThinking || api.isProcessing) && (\n          <div className=\"mb-6\">\n            <AIThinkingIndicator \n              message={apiConfig.useRealAPI \n                ? `Real ${apiConfig.model} is processing your input...` \n                : \"Enhanced AI is processing your input with optimized speed...\"\n              } \n            />\n          </div>\n        )}\n\n        {api.apiError && (\n          <div className=\"mb-6 p-4 bg-red-100 border border-red-200 rounded-xl\">\n            <div className=\"flex items-center gap-2 text-red-800\">\n              <AlertCircle className=\"w-5 h-5\" />\n              <span className=\"font-semibold\">API Error:</span>\n              <span>{api.apiError}</span>\n            </div>\n          </div>\n        )}\n\n        {gameData.currentRole === 'guesser' && gameData.guesserState?.currentRange && (\n          <div className=\"mb-6 p-4 bg-gradient-to-r from-cyan-50 to-blue-50 rounded-xl border border-cyan-200\">\n            <h4 className=\"font-semibold mb-2 text-cyan-800\">🔍 AI Guesser Status (Binary Search + Button Feedback)</h4>\n            <div className=\"text-sm text-cyan-700\">\n              <p>Current Search Range: [{gameData.guesserState.currentRange.min}, {gameData.guesserState.currentRange.max}]</p>\n              {gameData.guesserState.lastGuess && (\n                <p>Last Guess: {gameData.guesserState.lastGuess}</p>\n              )}\n              <p className=\"text-xs mt-1 text-green-600 font-medium\">\n                ✅ 100% Accurate Button Recognition - Mode: {apiConfig.useRealAPI ? `Real ${apiConfig.model}` : 'Enhanced Simulation'}\n              </p>\n            </div>\n          </div>\n        )}\n\n        {gameState === 'playing' && (\n          <div>\n            {gameData.currentRole === 'guesser' && conversation.length > 0 && (\n              <div className=\"mb-4 p-3 bg-emerald-50 rounded-lg border border-emerald-200\">\n                <p className=\"text-emerald-700 text-sm font-medium\">\n                  🎯 Use the buttons below to give feedback on AI's guess:\n                  <span className=\"block mt-1\">\n                    <strong>Higher:</strong> The secret number is higher than AI's guess |\n                    <strong> Lower:</strong> The secret number is lower than AI's guess |\n                    <strong> Correct:</strong> AI got it right!\n                  </span>\n                </p>\n              </div>\n            )}\n            \n            {gameData.currentRole === 'hider' && conversation.length > 0 && (\n              <div className=\"mb-4 p-3 bg-teal-50 rounded-lg border border-teal-200\">\n                <p className=\"text-teal-700 text-sm font-medium\">\n                  🎯 Enter your number guess in the text box below. AI will give instant feedback!\n                </p>\n              </div>\n            )}\n\n            <ConversationLog \n              conversation={conversation}\n              variant=\"v2\"\n              title=\"Enhanced AI Agent Conversation (Real API Supported)\"\n              isThinking={isThinking || api.isProcessing}\n            />\n\n            {gameData.currentRole === 'hider' ? (\n              <TextInput\n                onSubmit={handleTextInput}\n                disabled={isThinking || api.isProcessing || gameState === 'finished' || processingRef.current}\n                placeholder=\"Enter your guess...\"\n                buttonText=\"Guess\"\n                variant=\"v2\"\n              />\n            ) : (\n              <div className=\"space-y-4\">\n                <div className=\"text-center space-y-2 mb-6\">\n                  <div className=\"text-lg font-semibold text-gray-700\">\n                    Give feedback on AI's guess\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    Click the appropriate button based on your secret number\n                  </div>\n                </div>\n\n                <div className=\"flex justify-center gap-4 flex-wrap\">\n                  <button\n                    onClick={() => handleButtonInput('Higher')}\n                    disabled={isThinking || api.isProcessing || gameState === 'finished' || processingRef.current}\n                    className=\"px-8 py-4 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white rounded-xl font-bold text-lg disabled:opacity-50 disabled:cursor-not-allowed transition-all transform hover:scale-105 active:scale-95 shadow-lg hover:shadow-xl\"\n                  >\n                    <div className=\"flex flex-col items-center gap-1\">\n                      <div>📈 Higher</div>\n                      <div className=\"text-xs opacity-90 font-normal\">Secret number is greater</div>\n                    </div>\n                  </button>\n\n                  <button\n                    onClick={() => handleButtonInput('Lower')}\n                    disabled={isThinking || api.isProcessing || gameState === 'finished' || processingRef.current}\n                    className=\"px-8 py-4 bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white rounded-xl font-bold text-lg disabled:opacity-50 disabled:cursor-not-allowed transition-all transform hover:scale-105 active:scale-95 shadow-lg hover:shadow-xl\"\n                  >\n                    <div className=\"flex flex-col items-center gap-1\">\n                      <div>📉 Lower</div>\n                      <div className=\"text-xs opacity-90 font-normal\">Secret number is smaller</div>\n                    </div>\n                  </button>\n\n                  <button\n                    onClick={() => handleButtonInput('Correct')}\n                    disabled={isThinking || api.isProcessing || gameState === 'finished' || processingRef.current}\n                    className=\"px-8 py-4 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white rounded-xl font-bold text-lg disabled:opacity-50 disabled:cursor-not-allowed transition-all transform hover:scale-105 active:scale-95 shadow-lg hover:shadow-xl\"\n                  >\n                    <div className=\"flex flex-col items-center gap-1\">\n                      <div>✅ Correct</div>\n                      <div className=\"text-xs opacity-90 font-normal\">Guess is exactly right</div>\n                    </div>\n                  </button>\n                </div>\n\n                <div className=\"bg-emerald-50 rounded-lg p-4 text-sm text-emerald-700 border border-emerald-200\">\n                  <div className=\"text-center font-medium mb-2\">How to use:</div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-2 text-xs\">\n                    <div>📈 <strong>Higher:</strong> Your secret number is larger than AI's guess</div>\n                    <div>📉 <strong>Lower:</strong> Your secret number is smaller than AI's guess</div>\n                    <div>✅ <strong>Correct:</strong> AI guessed your secret number exactly</div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n{gameState === 'finished' && (\n          <div className=\"mt-8 text-center p-8 bg-gradient-to-r from-green-100 via-emerald-100 to-teal-100 rounded-2xl shadow-lg\">\n            <h3 className=\"text-3xl font-bold text-gray-800 mb-4\">🎉 Game Complete!</h3>\n            <p className=\"text-xl text-gray-700 mb-2\">\n              The enhanced AI agent as <strong>{gameData.currentRole === 'hider' ? 'Hider' : 'Guesser'}</strong> successfully completed the game!\n            </p>\n            <p className=\"text-lg text-gray-600\">\n              Total of <strong>{gameData.guessCount}</strong> guesses made\n            </p>\n          </div>\n        )}\n\n        <div className=\"mt-8 p-6 bg-gradient-to-br from-emerald-50 via-green-50 to-teal-50 rounded-2xl border border-emerald-200 shadow-xl\">\n          <h4 className=\"font-bold text-emerald-800 mb-5 text-xl flex items-center gap-3\">\n            <div className=\"w-8 h-8 bg-emerald-500 rounded-full flex items-center justify-center\">\n              <AlertCircle className=\"w-5 h-5 text-white\" />\n            </div>\n            System Features\n          </h4>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-emerald-500 rounded-full\"></div>\n              <span className=\"text-emerald-800 font-medium\">Enhanced Button Interface</span>\n            </div>\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n              <span className=\"text-emerald-800 font-medium\">Hybrid Intelligence System</span>\n            </div>\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-purple-500 rounded-full\"></div>\n              <span className=\"text-emerald-800 font-medium\">Advanced Number Extraction</span>\n            </div>\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-orange-500 rounded-full\"></div>\n              <span className=\"text-emerald-800 font-medium\">Race Condition Prevention</span>\n            </div>\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-pink-500 rounded-full\"></div>\n              <span className=\"text-emerald-800 font-medium\">Real-time API Integration</span>\n            </div>\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-indigo-500 rounded-full\"></div>\n              <span className=\"text-emerald-800 font-medium\">Binary Search Optimization</span>\n            </div>\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-red-500 rounded-full\"></div>\n              <span className=\"text-emerald-800 font-medium\">Error Handling & Recovery</span>\n            </div>\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-cyan-500 rounded-full\"></div>\n              <span className=\"text-emerald-800 font-medium\">Game State Validation</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UnifiedLLMAgentV2;"],"names":["UnifiedLLMAgentV2","_gameData$guesserStat","apiConfig","setApiConfig","useState","createDefaultAPIConfig","processingRef","useRef","gameState","conversation","isThinking","gameData","startGame","resetGame","addToConversation","updateGuesserState","incrementGuessCount","endGame","setAIThinking","processGuesserFeedback","useGameState","api","useLLMAPIEnhanced","handleConfigChange","useCallback","key","value","prev","_objectSpread","generateGuesserResponse","async","buttonFeedback","useRealAPI","result","error","response","shouldEndGame","newRange","nextGuess","concat","toLowerCase","min","max","_result$content","currentRange","lastGuess","guesserState","systemPrompt","getButtonPrompt","messages","role","content","callRealLLMAPI","console","log","success","contentLength","length","contentType","metadata","extractedNumber","substring","match","num","parseInt","numbers","i","enhancedExtractSecretNumber","localResult","warn","JSON","stringify","handleButtonInput","current","isProcessing","setTimeout","React","currentRole","validation","validateGameState","isValid","errors","_jsx","className","children","_jsxs","onClick","disabled","RotateCcw","GameConfiguration","config","onConfigChange","apiStatus","getAPIStatus","showAdvancedSettings","variant","BookOpen","model","AIThinkingIndicator","message","apiError","AlertCircle","ConversationLog","title","TextInput","onSubmit","userMessage","Promise","resolve","Math","random","guessMatch","guess","secret","secretNumber","compareGuess","userGuess","getUnifiedPrompt","generateHiderResponse","includes","placeholder","buttonText","guessCount"],"sourceRoot":""}