{"version":3,"file":"static/js/315.684ce5ec.chunk.js","mappings":"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","sources":["components/versions/UnifiedLLMAgentV1.jsx","utils/aiHelpers.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { RotateCcw, BookOpen, AlertCircle } from 'lucide-react';\nimport { useGameState } from '../../hooks/useGameState';\nimport { useLLMAPIEnhanced } from '../../hooks/useLLMAPIEnhanced';\nimport GameConfiguration from '../shared/GameConfiguration';\nimport ConversationLog from '../shared/ConversationLog';\nimport { TextInput } from '../shared/GameInput';\nimport { AIThinkingIndicator } from '../LoadingSpinner';\nimport { createDefaultAPIConfig } from '../../utils/gameConfig';\nimport { \n  getUnifiedPrompt, \n  parseUserFeedback\n} from '../../utils/promptEngineering';\nimport { \n  compareGuess, \n  updateGuessingRange,\n  calculateBinarySearchGuess\n} from '../../utils/gameLogic';\nimport { extractSecretNumber } from '../../utils/aiHelpers';\n\nconst UnifiedLLMAgentV1 = () => {\n  const [apiConfig, setApiConfig] = useState(createDefaultAPIConfig());\n  \n  const {\n    gameState,\n    conversation,\n    isThinking,\n    gameData,\n    startGame,\n    resetGame,\n    addToConversation,\n    updateGuesserState,\n    incrementGuessCount,\n    endGame,\n    setAIThinking\n  } = useGameState();\n\n  const api = useLLMAPIEnhanced(apiConfig);\n\n  const handleConfigChange = (key, value) => {\n    setApiConfig(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Unified response generation for all four modes\n  const generateResponse = async (userMessage, role, gameData) => {\n    try {\n      if (apiConfig.useRealAPI) {\n        return await callRealAPI(userMessage, role, gameData);\n      } else {\n        return simulateResponse(userMessage, role, gameData);\n      }\n    } catch (error) {\n      console.error('generateResponse error:', error);\n      return \"Sorry, I encountered an error. Please try again.\";\n    }\n  };\n\n  // Real API call handler\n  const callRealAPI = async (userMessage, role, gameData) => {\n    const systemPrompt = getUnifiedPrompt(role);\n    let contextMessage = userMessage;\n\n    if (role === 'hider') {\n      const guessMatch = userMessage.match(/(\\d+)/);\n      if (guessMatch) {\n        const userGuess = parseInt(guessMatch[1]);\n        const secretNumber = gameData.secretNumber;\n        \n        console.log(`Hider API Context - Secret: ${secretNumber}, User Guess: ${userGuess}`);\n        \n        contextMessage = `You are the HIDER in a number guessing game. \n\nCRITICAL GAME STATE:\n- Your secret number is: ${secretNumber}\n- User just guessed: ${userGuess}\n\nRULES - You MUST respond with EXACTLY one of these:\n- If ${userGuess} < ${secretNumber}: Respond \"Higher!\"\n- If ${userGuess} > ${secretNumber}: Respond \"Lower!\" \n- If ${userGuess} = ${secretNumber}: Respond \"Correct! Congratulations, you got it!\"\n\nCurrent comparison:\n- User guess ${userGuess} compared to secret ${secretNumber}\n- Mathematical result: ${userGuess < secretNumber ? `${userGuess} < ${secretNumber}, so respond \"Higher!\"` : userGuess > secretNumber ? `${userGuess} > ${secretNumber}, so respond \"Lower!\"` : `${userGuess} = ${secretNumber}, so respond \"Correct!\"`}\n\nRespond with ONLY the appropriate feedback, nothing else.`;\n      } else {\n        contextMessage = `You are the HIDER. Your secret number is ${gameData.secretNumber}. The user hasn't made a numeric guess yet. Encourage them to start guessing a number between 1-100.`;\n      }\n    } else if (role === 'guesser') {\n      const { currentRange, lastGuess } = gameData.guesserState;\n      \n      contextMessage = `I am the GUESSER in this game. I need to guess the user's secret number using binary search.\n      \nCurrent situation:\n- My search range: [${currentRange.min}, ${currentRange.max}]\n- My last guess: ${lastGuess || 'None yet'}\n- User's feedback to my guess: \"${userMessage}\"\n\nI must:\n1. Interpret the user's feedback (\"${userMessage}\")\n2. Update my search range accordingly\n3. Make my next guess using binary search strategy\n4. Respond in format: \"My current range is [min, max]. I guess [number].\"\n\nDo NOT provide feedback like \"Higher!\" or \"Lower!\" - I am the one making guesses, not giving feedback.`;\n    }\n\n    const messages = [{ role: 'user', content: contextMessage }];\n    const result = await api.callRealLLMAPI(messages, systemPrompt);\n    \n    return result.content || \"I couldn't generate a response. Please try again.\";\n  };\n\n  // Simulation response handler\n  const simulateResponse = (userMessage, role, gameData) => {\n    if (role === 'hider') {\n      return simulateHiderResponse(userMessage, gameData);\n    } else if (role === 'guesser') {\n      return simulateGuesserResponse(userMessage, gameData);\n    }\n    return \"I'm not sure how to respond to that. Please try again.\";\n  };\n\n  // Hider simulation\n  const simulateHiderResponse = (userMessage, gameData) => {\n    const guessMatch = userMessage.match(/(\\d+)/);\n    if (guessMatch) {\n      const guess = parseInt(guessMatch[1]);\n      const secret = gameData.secretNumber;\n      const result = compareGuess(guess, secret);\n      \n      switch (result) {\n        case 'correct':\n          return 'Correct! Congratulations, you got it!';\n        case 'higher':\n          return 'Higher!';\n        case 'lower':\n          return 'Lower!';\n        default:\n          return 'Please guess a number between 1 and 100.';\n      }\n    }\n    return \"I've chosen a secret number between 1-100. Start guessing!\";\n  };\n\n  // Guesser simulation\n  const simulateGuesserResponse = (userMessage, gameData) => {\n    const feedbackResult = parseUserFeedback(userMessage);\n    \n    if (feedbackResult.type === 'success') {\n      return 'Awesome! I guessed it right! Game over.';\n    }\n    \n    if (feedbackResult.type === 'unclear') {\n      return \"I didn't quite understand your feedback. Please tell me: should I guess higher, lower, or is it correct?\";\n    }\n    \n    const { currentRange, lastGuess } = gameData.guesserState;\n    const newRange = updateGuessingRange(currentRange, lastGuess, feedbackResult.feedback);\n    \n    if (newRange.min > newRange.max) {\n      return \"Seems like there's a logic error, please restart the game.\";\n    }\n    \n    const nextGuess = calculateBinarySearchGuess(newRange.min, newRange.max);\n    return `Okay, need to go ${feedbackResult.feedback}. My current guessing range is [${newRange.min}, ${newRange.max}]. I guess ${nextGuess}.`;\n  };\n\n  // User input handler\n  const handleUserInput = async (userMessage) => {\n    if (isThinking || gameState === 'finished' || api.isProcessing) return;\n    \n    console.log('User input:', userMessage);\n    addToConversation('user', userMessage);\n    setAIThinking(true);\n    \n    try {\n      const response = await generateResponse(userMessage, gameData.currentRole, gameData);\n      \n      console.log('AI response:', response);\n      setAIThinking(false);\n      \n      if (response && typeof response === 'string') {\n        addToConversation('ai', response);\n        \n        await handleStateUpdates(userMessage, response, gameData.currentRole);\n        \n        // Check if game ended\n        if (response.includes('Correct! Congratulations') || \n            response.includes('Awesome! I guessed it right!')) {\n          setTimeout(() => endGame(), 1000);\n        }\n      } else {\n        console.error('Invalid response:', response);\n        addToConversation('ai', 'Sorry, I encountered an issue generating a response. Please try again.');\n      }\n      \n    } catch (error) {\n      console.error('AI response failed:', error);\n      setAIThinking(false);\n      addToConversation('ai', 'Sorry, I encountered some issues. Please restart the game.');\n    }\n  };\n\n  // State update handler\n  const handleStateUpdates = async (userMessage, aiResponse, role) => {\n    try {\n      if (role === 'hider') {\n        const guessMatch = userMessage.match(/(\\d+)/);\n        if (guessMatch) {\n          incrementGuessCount();\n        }\n      } else if (role === 'guesser') {\n        const feedbackResult = parseUserFeedback(userMessage);\n        \n        if (feedbackResult.type === 'feedback') {\n          let nextGuess = null;\n          \n          if (apiConfig.useRealAPI) {\n            nextGuess = extractSecretNumber(aiResponse);\n          }\n          \n          if (!nextGuess) {\n            const { currentRange, lastGuess } = gameData.guesserState;\n            const newRange = updateGuessingRange(currentRange, lastGuess, feedbackResult.feedback);\n            nextGuess = calculateBinarySearchGuess(newRange.min, newRange.max);\n            \n            updateGuesserState(newRange, nextGuess);\n          } else {\n            const { currentRange, lastGuess } = gameData.guesserState;\n            const newRange = updateGuessingRange(currentRange, lastGuess, feedbackResult.feedback);\n            updateGuesserState(newRange, nextGuess);\n          }\n          \n          incrementGuessCount();\n        }\n      }\n    } catch (error) {\n      console.error('State update error:', error);\n    }\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6 bg-gradient-to-br from-purple-50 via-indigo-50 to-blue-50 min-h-screen\">\n      <div className=\"bg-white rounded-3xl shadow-2xl p-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-5xl font-bold bg-gradient-to-r from-purple-600 via-indigo-600 to-blue-600 bg-clip-text text-transparent mb-4\">\n            🧠 Unified AI Agent System V1\n          </h1>\n          <p className=\"text-xl text-gray-600 mb-6\">\n            Advanced number guessing game with dual AI modes and real API integration\n          </p>\n          \n          <div className=\"flex justify-center gap-4\">\n            <button\n              onClick={resetGame}\n              disabled={isThinking || api.isProcessing}\n              className=\"flex items-center gap-2 px-6 py-3 bg-gray-500 text-white rounded-xl font-semibold hover:bg-gray-600 transition-all disabled:opacity-50\"\n            >\n              <RotateCcw className=\"w-5 h-5\" />\n              Reset Game\n            </button>\n          </div>\n        </div>\n\n        <GameConfiguration \n          config={apiConfig}\n          onConfigChange={handleConfigChange}\n          apiStatus={api.getAPIStatus()}\n          showAdvancedSettings={true}\n          variant=\"v1\"\n          gameData={{\n            ...gameData,\n            useRealAPI: apiConfig.useRealAPI\n          }}\n          conversation={conversation}\n          gameState={gameState}\n        />\n\n        {gameState === 'idle' && (\n          <div className=\"mb-8 p-6 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl border border-blue-200\">\n            <h3 className=\"text-2xl font-semibold mb-4 text-gray-800 text-center flex items-center justify-center gap-2\">\n              <BookOpen className=\"w-7 h-7 text-blue-600\" />\n              Choose Game Mode\n            </h3>\n            <p className=\"text-center text-gray-600 mb-6\">Select how you want to interact with the AI agent:</p>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div\n                className=\"p-6 bg-white rounded-xl shadow-lg hover:shadow-xl transition-all cursor-pointer border-2 border-transparent hover:border-purple-300 group\"\n                onClick={() => startGame('hider')}\n              >\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:bg-purple-200 transition-all\">\n                    <span className=\"text-2xl\">🎯</span>\n                  </div>\n                  <h4 className=\"text-xl font-semibold text-gray-800 mb-3\">AI Hides Number</h4>\n                  <p className=\"text-gray-600 text-sm mb-4\">AI will think of a number between 1-100, and you guess it using natural language</p>\n                  <div className=\"bg-purple-50 rounded-lg p-3\">\n                    <p className=\"text-xs text-purple-700\">\n                      {apiConfig.useRealAPI ? `Real ${apiConfig.model} responses` : 'Enhanced simulation'} with \"Higher!\" or \"Lower!\" hints\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div\n                className=\"p-6 bg-white rounded-xl shadow-lg hover:shadow-xl transition-all cursor-pointer border-2 border-transparent hover:border-blue-300 group\"\n                onClick={() => startGame('guesser')}\n              >\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:bg-blue-200 transition-all\">\n                    <span className=\"text-2xl\">🔍</span>\n                  </div>\n                  <h4 className=\"text-xl font-semibold text-gray-800 mb-3\">AI Guesses Number</h4>\n                  <p className=\"text-gray-600 text-sm mb-4\">You think of a number, AI uses binary search with natural language feedback</p>\n                  <div className=\"bg-blue-50 rounded-lg p-3\">\n                    <p className=\"text-xs text-blue-700\">\n                      Tell AI \"higher\", \"lower\", \"correct\", etc. - {apiConfig.useRealAPI ? `Real ${apiConfig.model}` : 'Smart simulation'} with improved accuracy\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {(isThinking || api.isProcessing) && (\n          <div className=\"mb-6\">\n            <AIThinkingIndicator \n              message={apiConfig.useRealAPI \n                ? `Real ${apiConfig.model} is analyzing natural language...` \n                : \"Enhanced AI is analyzing natural language and formulating response...\"\n              } \n            />\n          </div>\n        )}\n\n        {api.apiError && (\n          <div className=\"mb-6 p-4 bg-red-100 border border-red-200 rounded-xl\">\n            <div className=\"flex items-center gap-2 text-red-800\">\n              <AlertCircle className=\"w-5 h-5\" />\n              <span className=\"font-semibold\">API Error:</span>\n              <span>{api.apiError}</span>\n            </div>\n          </div>\n        )}\n\n        {gameData.currentRole === 'guesser' && gameData.guesserState?.currentRange && (\n          <div className=\"mb-6 p-4 bg-gradient-to-r from-cyan-50 to-blue-50 rounded-xl border border-cyan-200\">\n            <h4 className=\"font-semibold mb-2 text-cyan-800\">🔍 AI Guesser Status (Binary Search with NLP)</h4>\n            <div className=\"text-sm text-cyan-700\">\n              <p>Current Search Range: [{gameData.guesserState.currentRange.min}, {gameData.guesserState.currentRange.max}]</p>\n              {gameData.guesserState.lastGuess && (\n                <p>Last Guess: {gameData.guesserState.lastGuess}</p>\n              )}\n              <p className=\"text-xs mt-1 text-green-600 font-medium\">\n                Mode: {apiConfig.useRealAPI ? `Real ${apiConfig.model} API` : 'Enhanced Simulation'} - All 4 modes working\n              </p>\n            </div>\n          </div>\n        )}\n\n        {gameState === 'playing' && (\n          <div>\n            {gameData.currentRole === 'guesser' && conversation.length > 0 && (\n              <div className=\"mb-4 p-3 bg-blue-50 rounded-lg border border-blue-200\">\n                <p className=\"text-blue-700 text-sm font-medium\">\n                  🎯 Give feedback using natural language:\n                  <span className=\"block mt-1\">\n                    <strong>Examples:</strong> \"higher\", \"lower\", \"go higher\", \"go lower\", \"you got it!\", \"correct!\", \"right!\", etc.\n                  </span>\n                </p>\n              </div>\n            )}\n            \n            {gameData.currentRole === 'hider' && conversation.length > 0 && (\n              <div className=\"mb-4 p-3 bg-purple-50 rounded-lg border border-purple-200\">\n                <p className=\"text-purple-700 text-sm font-medium\">\n                  🎯 Type your number guess below. AI will respond with \"Higher!\", \"Lower!\", or \"Correct!\"\n                </p>\n              </div>\n            )}\n\n            <ConversationLog \n              conversation={conversation}\n              variant=\"v1\"\n              title=\"AI Conversation\"\n              isThinking={isThinking || api.isProcessing}\n            />\n\n            <TextInput\n              onSubmit={handleUserInput}\n              disabled={isThinking || api.isProcessing || gameState === 'finished'}\n              placeholder={gameData.currentRole === 'hider' ? \"Enter your guess...\" : \"Enter feedback (e.g., 'higher', 'correct', 'lower')...\"}\n              variant=\"v1\"\n            />\n          </div>\n        )}\n\n        {gameState === 'finished' && (\n          <div className=\"mt-8 text-center p-8 bg-gradient-to-r from-green-100 via-emerald-100 to-teal-100 rounded-2xl shadow-lg\">\n            <h3 className=\"text-3xl font-bold text-gray-800 mb-4\">🎉 Game Complete!</h3>\n            <p className=\"text-xl text-gray-700 mb-2\">\n              The AI agent as <strong>{gameData.currentRole === 'hider' ? 'Hider' : 'Guesser'}</strong> successfully completed the game!\n            </p>\n            <p className=\"text-lg text-gray-600\">\n              Total of <strong>{gameData.guessCount}</strong> guesses made\n            </p>\n          </div>\n        )}\n\n<div className=\"mt-8 p-6 bg-gradient-to-br from-purple-50 via-indigo-50 to-blue-50 rounded-2xl border border-purple-200 shadow-xl\">\n          <h4 className=\"font-bold text-purple-800 mb-5 text-xl flex items-center gap-3\">\n            <div className=\"w-8 h-8 bg-gradient-to-r from-purple-500 to-indigo-500 rounded-full flex items-center justify-center\">\n              <AlertCircle className=\"w-5 h-5 text-white\" />\n            </div>\n            System Features\n          </h4>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-purple-500 rounded-full\"></div>\n              <span className=\"text-purple-800 font-medium\">Unified Architecture</span>\n            </div>\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-indigo-500 rounded-full\"></div>\n              <span className=\"text-purple-800 font-medium\">Natural Language Processing</span>\n            </div>\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n              <span className=\"text-purple-800 font-medium\">Binary Search Algorithm</span>\n            </div>\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-purple-600 rounded-full\"></div>\n              <span className=\"text-purple-800 font-medium\">Real API Integration</span>\n            </div>\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-indigo-600 rounded-full\"></div>\n              <span className=\"text-purple-800 font-medium\">Enhanced Simulation</span>\n            </div>\n            <div className=\"flex items-center gap-3 p-3 bg-white/70 rounded-xl hover:bg-white/90 transition-all\">\n              <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\n              <span className=\"text-purple-800 font-medium\">State Management</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UnifiedLLMAgentV1;","export const extractSecretNumber = (content) => {\n  const matches = content.match(\n    /(?:choose|secret|number|selected).*?(\\d+)|(\\d+).*?(?:secret|choose)/gi\n  );\n  if (matches && matches.length > 0) {\n    const numbers = matches[0].match(/\\d+/g);\n    if (numbers) {\n      const num = parseInt(numbers[0]);\n      if (num >= 1 && num <= 100) return num;\n    }\n  }\n  return null;\n};\n"],"names":["UnifiedLLMAgentV1","_gameData$guesserStat","apiConfig","setApiConfig","useState","createDefaultAPIConfig","gameState","conversation","isThinking","gameData","startGame","resetGame","addToConversation","updateGuesserState","incrementGuessCount","endGame","setAIThinking","useGameState","api","useLLMAPIEnhanced","callRealAPI","async","userMessage","role","systemPrompt","getUnifiedPrompt","contextMessage","guessMatch","match","userGuess","parseInt","secretNumber","console","log","concat","currentRange","lastGuess","guesserState","min","max","messages","content","callRealLLMAPI","simulateResponse","simulateHiderResponse","simulateGuesserResponse","guess","secret","compareGuess","feedbackResult","parseUserFeedback","type","newRange","updateGuessingRange","feedback","nextGuess","calculateBinarySearchGuess","handleStateUpdates","aiResponse","useRealAPI","matches","length","numbers","num","extractSecretNumber","error","_jsx","className","children","_jsxs","onClick","disabled","isProcessing","RotateCcw","GameConfiguration","config","onConfigChange","handleConfigChange","key","value","prev","_objectSpread","apiStatus","getAPIStatus","showAdvancedSettings","variant","BookOpen","model","AIThinkingIndicator","message","apiError","AlertCircle","currentRole","ConversationLog","title","TextInput","onSubmit","response","generateResponse","includes","setTimeout","placeholder","guessCount"],"sourceRoot":""}